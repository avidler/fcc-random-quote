{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.vidler\\\\random-quote\\\\src\\\\QuoteGenerator.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass QuoteGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quote: \"Default quote\",\n      author: \"Default author\",\n      allQuotes: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://quotes.stormconsultancy.co.uk/quotes.json').then(response => response.json()).then(data => console.log(data)).then(data => {\n      this.setState({\n        allQuotes: [data]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    console.log(this.state); //const randNum = Math.floor(Math.random() * this.state.allQuotes.length)\n    //const randQuote = this.state.allQuotes[randNum].quote\n    //const randAuthor = this.state.allQuotes[randNum].author\n    //this.setState({ quote: randQuote, author: randAuthor })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.quote)), React.createElement(\"div\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.author)), React.createElement(\"button\", {\n      id: \"new-quote\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"New Quote\"), React.createElement(\"a\", {\n      href: \"twitter.com\",\n      id: \"tweet-quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Tweet Quote\")));\n  }\n\n}\n\nexport default QuoteGenerator;","map":{"version":3,"sources":["C:\\Users\\a.vidler\\random-quote\\src\\QuoteGenerator.js"],"names":["React","Component","QuoteGenerator","constructor","state","quote","author","allQuotes","handleClick","bind","componentDidMount","fetch","then","response","json","data","console","log","setState","catch","err","event","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,eADE;AAETC,MAAAA,MAAM,EAAE,gBAFC;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAKC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFnB,EAGKH,IAHL,CAGUG,IAAI,IAAI;AAAC,WAAKG,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAE,CAACQ,IAAD;AAAZ,OAAd;AAAmC,KAHtD,EAIKI,KAJL,CAIWC,GAAG,IAAI;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAAiB,KAJpC;AAMH;;AAEDZ,EAAAA,WAAW,CAACa,KAAD,EAAO;AACdA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB,EAFc,CAGd;AACA;AACA;AACA;AACH;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWC,KADhB,CADJ,CADJ,EAOI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,MADhB,CADJ,CAPJ,EAYI;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,OAAO,EAAE,KAAKE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZJ,EAaI;AAAG,MAAA,IAAI,EAAC,aAAR;AAAsB,MAAA,EAAE,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,CADJ,CADJ;AAmBH;;AAjDiC;;AAqDtC,eAAeN,cAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport './App.css'\r\n\r\nclass QuoteGenerator extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            quote: \"Default quote\",\r\n            author: \"Default author\",\r\n            allQuotes: []\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://quotes.stormconsultancy.co.uk/quotes.json')\r\n            .then(response => response.json())\r\n            .then(data => (console.log(data)))\r\n            .then(data => {this.setState({allQuotes: [data]})})\r\n            .catch(err => {console.log(err)})\r\n        \r\n    }\r\n\r\n    handleClick(event){\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        //const randNum = Math.floor(Math.random() * this.state.allQuotes.length)\r\n        //const randQuote = this.state.allQuotes[randNum].quote\r\n        //const randAuthor = this.state.allQuotes[randNum].author\r\n        //this.setState({ quote: randQuote, author: randAuthor })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div id=\"quote-box\">\r\n                    <div id=\"text\">\r\n                        <p>\r\n                            {this.state.quote}\r\n                            \r\n                        </p>\r\n                    </div>\r\n                    <div id=\"author\">\r\n                        <p>\r\n                            {this.state.author}\r\n                        </p>\r\n                    </div>\r\n                    <button id=\"new-quote\" onClick={this.handleClick}>New Quote</button>\r\n                    <a href=\"twitter.com\" id=\"tweet-quote\">Tweet Quote</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default QuoteGenerator"]},"metadata":{},"sourceType":"module"}