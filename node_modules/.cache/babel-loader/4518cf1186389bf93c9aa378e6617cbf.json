{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.vidler\\\\random-quote\\\\src\\\\QuoteGenerator.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass QuoteGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quote: \"\",\n      author: \"\",\n      allQuotes: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://quotes.stormconsultancy.co.uk/quotes.json').then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        allQuotes: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    this.generateQuote();\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.generateQuote();\n  }\n\n  generateQuote() {\n    console.log(this.state);\n    const randNum = Math.floor(Math.random() * this.state.allQuotes.length);\n    const randQuote = this.state.allQuotes[randNum].quote;\n    const randAuthor = this.state.allQuotes[randNum].author;\n    this.setState({\n      quote: randQuote,\n      author: randAuthor\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"main-quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.quote)), React.createElement(\"div\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.author))), React.createElement(\"div\", {\n      id: \"quote-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"button-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"new-quote\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"New Quote\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.twitter.com/intent/tweet?text=\" + this.state.quote,\n      id: \"tweet-quote\",\n      class: \"fa fa-twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Tweet Quote\"))))));\n  }\n\n}\n\nexport default QuoteGenerator;","map":{"version":3,"sources":["C:\\Users\\a.vidler\\random-quote\\src\\QuoteGenerator.js"],"names":["React","Component","QuoteGenerator","constructor","state","quote","author","allQuotes","handleClick","bind","componentDidMount","fetch","then","response","json","data","console","log","setState","catch","err","generateQuote","event","preventDefault","randNum","Math","floor","random","length","randQuote","randAuthor","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './App.css'\r\n\r\nclass QuoteGenerator extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            quote: \"\",\r\n            author: \"\",\r\n            allQuotes: []\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('http://quotes.stormconsultancy.co.uk/quotes.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({allQuotes: data})\r\n            })\r\n            .catch(err => {console.log(err)})\r\n        this.generateQuote()\r\n    }\r\n\r\n    handleClick(event){\r\n        event.preventDefault()\r\n        this.generateQuote()\r\n    }\r\n\r\n    generateQuote() {\r\n\r\n        console.log(this.state)\r\n        const randNum = Math.floor(Math.random() * this.state.allQuotes.length)\r\n        const randQuote = this.state.allQuotes[randNum].quote\r\n        const randAuthor = this.state.allQuotes[randNum].author\r\n        this.setState({ quote: randQuote, author: randAuthor })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div id=\"quote-box\">\r\n                    <div id=\"main-quote\">\r\n                        <div id=\"text\">\r\n                            <p>\r\n                                {this.state.quote}\r\n                                \r\n                            </p>\r\n                        </div>\r\n                        <div id=\"author\">\r\n                            <p>\r\n                                {this.state.author}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"quote-footer\">\r\n                        <div id=\"button-wrap\">\r\n                            <div>\r\n                                <button id=\"new-quote\" onClick={this.handleClick}>New Quote</button>\r\n                            </div>\r\n                            <div>\r\n                                <a \r\n                                    href={\"https://www.twitter.com/intent/tweet?text=\"+this.state.quote} \r\n                                    id=\"tweet-quote\"\r\n                                    class=\"fa fa-twitter\"\r\n                                >Tweet Quote</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default QuoteGenerator"]},"metadata":{},"sourceType":"module"}